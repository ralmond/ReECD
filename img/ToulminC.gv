digraph ToulminC {
	rankdir="BT";
	node [shape="rectangle"];

	claim1 [label="Claim1"]
	claim2 [label="Claim2"]
	claim3 [label="Claim3"]
	const [label="Construct"]
	data1 [label="Observation1"]
	data2 [label="Observation2"]
	data3 [label="Observation3"]

	{rank="max"; claim1, claim2, claim3}
	claim1 -> claim2 -> claim3 [style="invis"]
	const -> claim1; const -> claim2; const -> claim3

	{rank="min"; data1, data2, data3}
	data1 -> data2 -> data3 [style="invis"]
	const -> data1; const -> data2; const -> data3
	
	}
```

# Contexts

## Contexts and Situtations

## Adding Contexts to the Toulmin Diagram


```{dot}
//| label: fig-ToulminC
//| fig-cap: "Toulmin diagram with added context."
//| height: 4
digraph {
	rankdir="TB";
	node [shape="rectangle"];

	subgraph cluster_C {
		rank="max";
		color="black";
		label="Context*";
		style="rounded";
		shape="";
		claim [label="Claim"]
		spacer1 [fixedsize="true", height=0, width=0, style="invis"]
		spacer2 [fixedsize="true", height=0, width=0, style="invis"]
		spacer1 -> claim -> spacer2 [style="invis"]
		{rank="same"; spacer1; claim; spacer2}
	}

	subgraph row_1 {
		rank="same";
		warrant1 [label="Warrant*"]
		alt1 [label="Alternative*"]
		junction1 [fixedsize="true", height=0, width=0, style="invis"]
		warrant1 -> junction1 
		junction1 -> alt1 [dir="back"]
	}  

	subgraph row_2 {
		rank="same";
		const [label="Construct"]
		spacerM1 [fixedsize="true", height=0, width=0, style="invis"]
		spacerM2 [fixedsize="true", height=0, width=0, style="invis"]
		spacerM1 -> const -> spacerM2 [style="invis"]
		{rank="same"; spacerM1; const; spacerM2}
	}

	subgraph row_3 {
		rank="same";
		warrant2 [label="Warrant"]
		alt2 [label="Alternative"]
		junction2 [fixedsize="true", height=0, width=0, style="invis"]
		warrant2 -> junction2 
		junction2 -> alt2 [dir="back"]
	} 

	subgraph cluster_O {
		rank="min";
		color="black";
		label="Context";
		style="rounded";
		labelloc="b";
		data [label="Observation"]
		spacer3[fixedsize="true", height=0, width=0, style="invis"]
		spacer4 [fixedsize="true", height=0, width=0, style="invis"]
		spacer3 -> data -> spacer4 [style="invis"]
		{rank="same"; spacer3; data; spacer4}
	}


	warrant2->spacer3 [style="invis"]
	warrant1->spacerM1->warrant2 [style="invis"]
	spacer1 -> warrant1 [style="invis"]
	alt2 -> spacer4 [style="invis"]
	alt1 -> spacerM2->alt2 [style="invis"]
	spacer2 -> alt1 [style="invis"]


	data -> junction2 [dir="back"] 
	junction2 -> const [dir="none"]
	const -> junction1 [dir="none"]
	junction1 ->  claim 
}